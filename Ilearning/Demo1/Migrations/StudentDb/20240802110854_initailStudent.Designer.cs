// <auto-generated />
using System;
using Demo1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo1.Migrations.StudentDb
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20240802110854_initailStudent")]
    partial class initailStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Demo1.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("Dep_id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("Mindegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Demo1.Models.CrsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Degree")
                        .HasColumnType("int");

                    b.Property<int?>("TranieeId")
                        .HasColumnType("int");

                    b.Property<int?>("Traniee_id")
                        .HasColumnType("int");

                    b.Property<int?>("crs_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TranieeId");

                    b.ToTable("CrsResults");
                });

            modelBuilder.Entity("Demo1.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departes");
                });

            modelBuilder.Entity("Demo1.Models.Instractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Dep_id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("crs_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartementId");

                    b.ToTable("Instractors");
                });

            modelBuilder.Entity("Demo1.Models.Traniee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("Dep_id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Traniees");
                });

            modelBuilder.Entity("Demo1.Models.Course", b =>
                {
                    b.HasOne("Demo1.Models.Departement", null)
                        .WithMany("Course")
                        .HasForeignKey("DepartementId");
                });

            modelBuilder.Entity("Demo1.Models.CrsResult", b =>
                {
                    b.HasOne("Demo1.Models.Course", null)
                        .WithMany("CrsResult")
                        .HasForeignKey("CourseId");

                    b.HasOne("Demo1.Models.Traniee", null)
                        .WithMany("CrsResult")
                        .HasForeignKey("TranieeId");
                });

            modelBuilder.Entity("Demo1.Models.Instractor", b =>
                {
                    b.HasOne("Demo1.Models.Course", null)
                        .WithMany("Instractor")
                        .HasForeignKey("CourseId");

                    b.HasOne("Demo1.Models.Departement", null)
                        .WithMany("Instractor")
                        .HasForeignKey("DepartementId");
                });

            modelBuilder.Entity("Demo1.Models.Traniee", b =>
                {
                    b.HasOne("Demo1.Models.Departement", null)
                        .WithMany("traniees")
                        .HasForeignKey("DepartementId");
                });

            modelBuilder.Entity("Demo1.Models.Course", b =>
                {
                    b.Navigation("CrsResult");

                    b.Navigation("Instractor");
                });

            modelBuilder.Entity("Demo1.Models.Departement", b =>
                {
                    b.Navigation("Course");

                    b.Navigation("Instractor");

                    b.Navigation("traniees");
                });

            modelBuilder.Entity("Demo1.Models.Traniee", b =>
                {
                    b.Navigation("CrsResult");
                });
#pragma warning restore 612, 618
        }
    }
}
